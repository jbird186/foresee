#false{1}
#true{1}
#!={== 1 ^}

// Print a newline
#cr{'\n'.c}
#show{dup .}
#showln{dup . cr}

#dup{0 pick}
#over{1 pick}

#dowhile(__ops __cond) {
    __ops
    while __cond {
        __ops
    }
}

#for(__init __cond __iter __ops) {
    __init
    while __cond {
        __ops
        __iter
    }
}

:fib {
    1 showln
    1 showln
    while dup 1000 < {
        swap over + showln
    }
    drop drop
    return
}

fib