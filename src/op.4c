#use "src/types.4c"

enum OKind {
    // Misc / Special
    EOF
    NOOP
    EXIT    // exit_code --
    // Functions
    CALL
    PUSH_FN
    CALL_FN
    RET
    // Stack Primitives
    PUSH_INT
    DROP    // item --
    PICK    // n -- item
    ROLL    // n -- item
    DEPTH   // -- depth
    // Reference Primitives
    PUSH_BUF
    STORE   // item ptr --
    FETCH   // ptr -- item
    // Allocation
    PUSH_VAR
    ALLOC
    DEALLOC
    // Binary Operations
    ADD
    SUB
    MUL
    DIV
    AND
    OR
    XOR
    SHL
    SHR
    SAR
    NOT
    EQ
    GT
    LT
    // Branching
    LABEL
    JMP
    JZ      // value --
    // I/O
    FOPEN   // filename_ptr [0=read, 1=write, 2=append] -- [fd, -1]
    FREAD   // ptr len fd -- [bytes_read, -1]
    FWRITE  // ptr len fd -- [bytes_written, -1]
    FCLOSE  // fd -- [0, -1]}
}

// data kind ref --
:op_push {
    // -- data kind ptr
    %Op stack_push
    swap over->Op.kind!
    ->Op.data!
}

:viewok { dup->Op.kind@c }
:viewod { dup->Op.data@ }