#include "std/core.5th"
#include "std/stdref.5th"

$__stdio_buf 24

:out_char {
    &__stdio_buf!
    &__stdio_buf 1 stdout
}
#.c{out_char}
#showc{dup .c}
#cr{'\n'.c}
#sp{' '.c}

:out_int {
    if dup 0 < {
        -1 *
        '-'.c
    }

    0 dowhile({
        &__stdio_buf 23 + over -
        rot dup 10 % '0' +
        rot !c
        10 /
        swap 1 +
    } {over})
    &__stdio_buf 24 + over - swap
    stdout drop
}
#.{out_int}
#show{dup .}

:out_str {
    while dup@c dup {
        .c 1 +
    } drop drop
}
#.s{out_str}
#shows{dup .s}

:in_char {
    &__stdio_buf 1 stdin
    &__stdio_buf@c
}
#,c{in_char}

:in_int {
    &__stdio_buf 20 stdin drop
    0 &__stdio_buf
    while dup@c dup '\n' != {
        '0' -
        rot 10 * +
        swap 1 +
    } drop drop
}
#,{in_int}

:stdinln {
    over swap stdin
    1 -
    dup rot +
    0 swap !c
}