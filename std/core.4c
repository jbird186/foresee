#use "std/core/intrinsics.4c"
#use "std/core/linux.4c"

struct int { 8 __inner }
struct ptr { 8 __inner }
struct char { 1 __inner }
struct bool { 1 __inner }

#macro NULL{0}
#macro false{0}
#macro true{1}
#macro !={== 1 ^}
#macro <={> 1 ^}
#macro >={< 1 ^}
#macro is_success{-1 >}
#macro is_failure{0 <}
:flag{(if {true} else {false})}
:not{(if {false} else {true})}

// a -- a a
:dup{0 pick}
// a b -- a b a
:over{1 pick}
// a b -- b a
:swap{1 roll}
// a b c -- b c a
:rot{2 roll}
// a b -- b
:nip{swap drop}

#macro %{over over / * -}

#macro !{store}
#macro @{fetch}
#macro @++{dup@ dup 1+ rot!}
#macro ++@{dup@ 1+ dup rot!}
#macro @--{dup@ dup 1- rot!}
#macro --@{dup@ 1- dup rot!}

:storec {
    dup fetch 0xff ~ &
    rot 0xff & |
    swap store
}
#macro !c{storec}
:fetchc {
    fetch 0xff &
}
#macro @c{fetchc}
#macro @c++{dup@c dup 1+ rot!c}
#macro ++@c{dup@c 1+ dup rot!c}
#macro @c--{dup@c dup 1- rot!c}
#macro --@c{dup@c 1- dup rot!c}

#macro dowhile(__ops __cond) {
    __ops
    while __cond {
        __ops
    }
}