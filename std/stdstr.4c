#include "std/core.4c"

// ptr -- len
:str_len {
    dup
    while dup@c { 1+ }
    swap -
}

// src dest --
:str_copy {
    while over@c dup {
        over!c
        1+ swap 1+ swap
    } drop
    0 swap !c
    drop
}

// src dest --
:str_cat {
    dup str_len +
    str_copy
}

// s1 s2 -- diff
:str_cmp {
    while over@c over@c | {
        if over@c over@c - dup {
            rot rot drop drop
            return
        } drop
        1+ swap 1+ swap
    }
    drop drop
    0
}

// s1 s2 -- is_eq
:str_eq { str_cmp not }

// str char -- [ptr, 0]
:str_char {
    while over@c dup {
        if over == {
            drop
            return
        }
        swap 1+ swap
    } drop
    drop drop
    0
}