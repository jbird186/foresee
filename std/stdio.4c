#include "std/stdref.4c"
#include "std/stdconv.4c"

:out_char {
    &__std_buf!
    &__std_buf 1 stdout
}
#.c{out_char}
#showc{dup .c}
#cr{'\n'.c}
#sp{' '.c}

// int fd --- [bytes_written, -1]
:fwrite_int { swap __write_int_to_temp rot fwrite }
// int ---
:out_int {__write_int_to_temp stdout}
#.{out_int}
#show{dup .}

:out_str {
    while dup@c dup {
        .c 1+
    } drop drop
}
#.s{out_str}
#shows{dup .s}

// --- char
:in_char {
    &__std_buf 1 stdin drop
    &__std_buf@c
}
#,c{in_char}

// --- int
:in_int {
    &__std_buf 24 stdin drop

    // buf
    &__std_buf
    // is_neg buf
    dup@c '-' == swap
    if over { 1+ }

    // is_neg total buf
    0 swap

    // is_neg total buf c
    while dup@c dup '\n' != {
        '0' -
        rot 10* +
        swap 1+
    }
    // is_neg total
    drop drop

    if swap { -1* }
}
#,{in_int}

:stdinln {
    over swap stdin
    1 -
    dup rot +
    0 swap !c
}