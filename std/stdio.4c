#use "stdconv.4c"

// buf len -- bytes_read
pub :stdinln {
    $ptr buf: {over}
    $int res: {stdin}
    if res is_failure { res return }
    0 (buf res+ 1-)!c
    res 1-
}

// int fd -- [bytes_written, -1]
pub :fwrite_int { swap __write_int_to_temp rot fwrite }

pub :put { __write_int_to_temp stdout }
#pub macro show{dup put}

pub :putc {
    &__std_buf!
    &__std_buf 1 stdout
}
#pub macro showc{dup putc}
#pub macro cr{'\n' putc}
#pub macro sp{' ' putc}

pub :puts {
    while dup@c dup {
        putc 1+
    } drop drop
}
#pub macro shows{dup puts}

pub :eput { __write_int_to_temp stderr }
pub :eputc {
    &__std_buf!
    &__std_buf 1 stderr
}
pub :eputs {
    while dup@c dup {
        eputc 1+
    } drop drop
}

// -- char
pub :readc {
    &__std_buf 1 stdin drop
    &__std_buf@c
}

// -- int
pub :read {
    &__std_buf 24 stdin drop
    &__std_buf atoi
}