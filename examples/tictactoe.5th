#include "std/stdref.5th"
#include "std/stdio.5th"

$board 9: ""
$current_player 1

// Given `a b c`,
// Returns board[a] == board[b] == board[c]
:line_eq {
    &board+ !c
    swap
    &board+ !c
    over
    if != {
        drop drop
        false return
    }
    swap
    &board+ !c
    == return
}

// Given `a b c`,
// Returns the character of the winner ('X'/'O'), 0 if neither
:line_winner {
    if 2 pick line_eq {
        &board+ !c return
    } else {
        drop 0 return
    }
}

// Returns the character of the winner ('X'/'O'), 0 if neither
:game_winner {
    if 0 1 2 line_winner dup {}
    else if drop 3 4 5 line_winner dup {}
    else if drop 6 7 8 line_winner dup {}
    else if drop 0 3 6 line_winner dup {}
    else if drop 1 4 7 line_winner dup {}
    else if drop 2 5 8 line_winner dup {}
    else if drop 0 4 8 line_winner dup {}
    else if drop 2 4 6 line_winner dup {}
    return
}

// Given `a`,
// Returns whether board[a] is an open square
:is_open {
    // bounds check
    if dup 8 > {
        drop false return
    }

    &board+ !c
    not return
}

// Given `a`,
// Returns the appropriate character to display for board[a]
:square_char {
    &board+ !c
    if dup not {
        drop ' '
    }
    return
}

// Given `a b c`,
// Displays the current state for row "c | b | a"
:show_board_row {
    " ".s square_char.c
    " | ".s square_char.c
    " | ".s square_char.c
    cr
}

// Displays the current board state
:show_board {
    2 1 0 show_board_row
    "-----------\n".s
    5 4 3 show_board_row
    "-----------\n".s
    8 7 6 show_board_row
}

// Switches the current player
:switch_player {
    if &current_player!c 'X' == {
        'O'
    } else {
        'X'
    }
    &current_player@c
}

:main {
    'X' &current_player@c
    while game_winner 0 == {
        cr show_board
        &current_player!c .c " to move.\n".s

        "Enter an empty board position (1-9): ".s
        , 1-

        if dup is_open {
            &board+ &current_player!c swap @c
            switch_player
        } else {
            drop
            "Invalid move!\n".s
        }
    }
    cr show_board
    "Player ".s game_winner.c " wins!\n".s
}

main